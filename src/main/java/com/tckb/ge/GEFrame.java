/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tckb.ge;

import com.tckb.ge.stubs.IApplicationGE;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jawin.COMException;

/**
 *
 * @author tckb
 */
public class GEFrame extends javax.swing.JFrame {

    private GEPanel gePanel = null;
    private static GEFrame geFrameObject = null;

    /**
     * Creates new form GEFrame1
     */
    public GEFrame() {
        initComponents();
        gePanel = new GEPanel();
        add(gePanel);
        validate();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Google Earth Viewer");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    public static synchronized GEFrame getFrame() {
        if (geFrameObject == null) {
            geFrameObject = new GEFrame();
        }
        return geFrameObject;
    }

    public void startGE() {
        try {
            gePanel.initGE();
            gePanel.embedGE();
            geFrameObject.setSize(gePanel.getGERenderDimension());
            geFrameObject.validate();

        } catch (COMException | InterruptedException | IOException | NoSuchFieldException | IllegalArgumentException | IllegalAccessException ex) {
            Logger.getLogger(GEFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        setVisible(true);
    }

    public void closeGE() {
        geFrameObject = null;
        gePanel.quitGE();
    }

    public void loadKMLFileToGE(File linkFile) {
        try {
            gePanel.loadKmlFile(linkFile);
        } catch (COMException ex) {
            Logger.getLogger(GEFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public IApplicationGE getGEObject() {
        return gePanel.getInternObject();
    }
}
